import telebot
import random
import requests
from bs4 import BeautifulSoup
from telebot import types
# Замените 'YOUR_TELEGRAM_BOT_TOKEN' на токен вашего бота
TOKEN = '7438912361:AAGmaPJuvuvSZ7LGt1lgIEpRQhvJUYCTneY'
bot = telebot.TeleBot(TOKEN)
# Список экологических советов
tips = [
    "Используйте общественный транспорт, езжайте на велосипеде или ходите пешком.",
    "Экономьте электроэнергию: выключайте свет и электроприборы, когда они не используются.",
    "Сократите потребление пластика и сортируйте мусор для рециклинга.",
    "Поддерживайте локальные продукты и уменьшайте транспортировку товаров.",
    "Участвуйте в посадке деревьев и озеленении вашего города.",
    "Отдавайте предпочтение товарам с минимальной упаковкой.",
    "Используйте многоразовые сумки и бутылки вместо одноразовых.",
    "Сократите использование одноразовых посуды и столовых приборов.",
    "Соблюдайте принципы энергосбережения в быту: регулируйте температуру, утепляйте дом.",
    "Поддерживайте и участвуйте в местных экологических инициативах и акциях.",
    "Выбирайте энергоэффективную бытовую технику и оборудование.",
    "Организуйте совместное использование автомобилей (карпулинг) для сокращения количества машин на дорогах.",
    "Покупайте экологически чистые и натуральные продукты, избегая товаров с искусственными добавками.",
    "Используйте альтернативные источники энергии, такие как солнечные батареи или ветровые турбины.",
    "Поддерживайте проекты по защите природы и участвуйте в волонтёрских экологических акциях.",
    "Компостируйте органические отходы для получения натурального удобрения.",
    "Используйте дождевую воду для полива растений и огорода.",
    "Сократите потребление мяса, чтобы уменьшить воздействие на окружающую среду.",
    "Выбирайте экологичные бытовые средства для уборки, избегая химии.",
    "При ремонте дома отдавайте предпочтение натуральным и экологически чистым материалам."
]
# Список вопросов для теста
test_questions = [
    {
        "question": "Какой способ передвижения помогает сократить выбросы углекислого газа?",
        "correct_option": "На общественном транспорте",
        "wrong_option": "На машине",
        "explanation": "Езда на общественном транспорте помогает сократить выбросы углекислого газа и уменьшает нагрузку на дороги."
    },
    {
        "question": "Что нужно делать для экономии электроэнергии?",
        "correct_option": "Выключать свет и электроприборы, когда они не используются",
        "wrong_option": "Оставлять их включёнными постоянно",
        "explanation": "Выключение ненужных приборов помогает сократить потребление электроэнергии."
    },
    {
        "question": "Как можно уменьшить загрязнение пластиком?",
        "correct_option": "Сократить потребление пластика и сортировать мусор",
        "wrong_option": "Употреблять больше пластиковых изделий",
        "explanation": "Уменьшение использования пластика и его переработка уменьшают негативное воздействие на окружающую среду."
    },
    {
        "question": "Что помогает снизить углеродный след при покупке продуктов?",
        "correct_option": "Покупать локальные продукты",
        "wrong_option": "Покупать продукты, привезённые издалека",
        "explanation": "Поддержка локальных производителей снижает транспортные расходы и связанные с ними выбросы CO2."
    },
    {
        "question": "Что улучшает качество воздуха и способствует борьбе с изменением климата?",
        "correct_option": "Посадка деревьев",
        "wrong_option": "Снос деревьев",
        "explanation": "Деревья поглощают углекислый газ, выделяя кислород, что улучшает качество воздуха."
    },
    {
        "question": "Как можно сократить объем отходов?",
        "correct_option": "Покупать товары с минимальной упаковкой",
        "wrong_option": "Покупать товары с обильной упаковкой",
        "explanation": "Меньшее количество упаковки означает меньше отходов, требующих утилизации."
    },
    {
        "question": "Как уменьшить количество мусора?",
        "correct_option": "Использовать многоразовые сумки и бутылки",
        "wrong_option": "Покупать одноразовые изделия",
        "explanation": "Многоразовые изделия позволяют сократить количество отходов."
    },
    {
        "question": "Что способствует уменьшению мусора?",
        "correct_option": "Сократить использование одноразовых изделий",
        "wrong_option": "Использовать одноразовую посуду",
        "explanation": "Одноразовая посуда быстро превращается в мусор, её сокращение помогает защитить природу."
    },
    {
        "question": "Как можно сэкономить энергию в доме?",
        "correct_option": "Регулировать температуру и утеплять дом",
        "wrong_option": "Не принимать мер по утеплению и регулированию",
        "explanation": "Утепление дома и правильное регулирование температуры уменьшают затраты на отопление и энергопотребление."
    },
    {
        "question": "Какая деятельность помогает улучшить экологическую ситуацию?",
        "correct_option": "Участвовать в экологических инициативах",
        "wrong_option": "Игнорировать экологические проблемы",
        "explanation": "Активное участие в экологических акциях способствует повышению осведомлённости и улучшению окружающей среды."
    },
    {
        "question": "На что следует обращать внимание при покупке техники?",
        "correct_option": "На энергоэффективность техники",
        "wrong_option": "На внешний вид техники, игнорируя её энергопотребление",
        "explanation": "Энергоэффективная техника потребляет меньше энергии, что помогает сократить выбросы CO2."
    },
    {
        "question": "Что помогает снизить транспортные выбросы?",
        "correct_option": "Совместное использование автомобилей (карпулинг)",
        "wrong_option": "Езда на личном автомобиле каждому",
        "explanation": "Карпулинг уменьшает количество машин на дорогах и, соответственно, автомобильные выбросы."
    },
    {
        "question": "Как можно избежать искусственных добавок в питании?",
        "correct_option": "Покупать экологически чистые и натуральные продукты",
        "wrong_option": "Покупать продукты с искусственными добавками",
        "explanation": "Натуральные продукты обычно выращиваются без химических удобрений и консервантов, что лучше для здоровья и экологии."
    },
    {
        "question": "Как можно снизить зависимость от ископаемых источников энергии?",
        "correct_option": "Использовать солнечные батареи или ветровые турбины",
        "wrong_option": "Полагаться на ископаемое топливо",
        "explanation": "Альтернативные источники энергии не загрязняют окружающую среду и способствуют устойчивому развитию."
    },
    {
        "question": "Какая деятельность способствует сохранению природы?",
        "correct_option": "Поддержка природоохранных проектов и участие в акциях",
        "wrong_option": "Игнорирование экологических инициатив",
        "explanation": "Активное участие в таких проектах помогает привлечь внимание к проблемам экологии и найти пути их решения."
    },
    {
        "question": "Как можно эффективно использовать органические отходы?",
        "correct_option": "Компостирование для получения удобрения",
        "wrong_option": "Выбрасывать органические отходы на свалку",
        "explanation": "Компостирование превращает отходы в ценное удобрение, улучшая почву и снижая нагрузку на свалки."
    },
    {
        "question": "Как можно рациональнее использовать водные ресурсы?",
        "correct_option": "Использовать дождевую воду для полива растений",
        "wrong_option": "Использовать только водопроводную воду",
        "explanation": "Дождевая вода – бесплатный и доступный ресурс, который помогает экономить питьевую воду."
    },
    {
        "question": "Какое изменение в питании помогает снизить углеродный след?",
        "correct_option": "Сократить потребление мяса",
        "wrong_option": "Увеличить потребление мяса",
        "explanation": "Производство мяса связано с высокими выбросами парниковых газов, сокращение его потребления благоприятно сказывается на экологии."
    },
    {
        "question": "Какой выбор средств для уборки более безопасен для природы?",
        "correct_option": "Использовать экологичные бытовые средства",
        "wrong_option": "Использовать сильные химические средства",
        "explanation": "Экологичные средства не содержат агрессивных химикатов, что снижает риск загрязнения воды и почвы."
    },
    {
        "question": "Что следует учитывать при выборе материалов для ремонта?",
        "correct_option": "Натуральные и экологически чистые материалы",
        "wrong_option": "Искусственные материалы с высоким содержанием химии",
        "explanation": "Натуральные материалы менее вредны для здоровья и окружающей среды, их производство часто является более устойчивым."
    }
]
# Словарь для хранения состояния теста каждого пользователя
test_states = {}
def send_test_question(chat_id, user_id):
    state = test_states[user_id]
    q = state["questions"][state["current"]]
    
    markup = types.InlineKeyboardMarkup()
    btn_correct = types.InlineKeyboardButton(q["correct_option"], callback_data=f"test_{state['current']}_correct")
    btn_wrong = types.InlineKeyboardButton(q["wrong_option"], callback_data=f"test_{state['current']}_wrong")
    markup.add(btn_wrong, btn_correct)
    
    bot.send_message(chat_id, q["question"], reply_markup=markup)
@bot.message_handler(commands=['start'])
def start_handler(message):
    welcome_text = (
        "Привет! Я бот, который помогает бороться с глобальным потеплением.\n"
        "Доступные команды:\n"
        "/tips - получить экологический совет\n"
        "/news - последние новости о климате\n"
        "/donate - способы поддержать экологические проекты\n"
        "/test - пройти тест по экологическим советам"
    )
    bot.send_message(message.chat.id, welcome_text)
@bot.message_handler(commands=['tips'])
def tips_handler(message):
    tip = random.choice(tips)
    bot.send_message(message.chat.id, f"Совет: {tip}")
@bot.message_handler(commands=['news'])
def news_handler(message):
    url = "https://ria.ru/keyword_globalnoe_poteplenie/"
    dict_news = {"news": []}
    response = requests.get(url)
    bs = BeautifulSoup(response.text,"lxml")
    temp = bs.find_all('div', 'list-item')
    for post in temp:
        dict_news["news"].append(post.find('a', 'list-item__title').text)
    all_news = ';\n'.join(dict_news["news"])
 
    news_text = "Последние новости о глобальном потеплении:\n"+all_news 
    bot.send_message(message.chat.id, news_text)
@bot.message_handler(commands=['donate'])
def donate_handler(message):
    donate_text = (
        "Поддержите борьбу с глобальным потеплением:\n\n"
        "• WWF: https://www.worldwildlife.org/\n"
        "• Greenpeace: https://www.greenpeace.org/\n"
        "• Экопроекты вашего города (найдите информацию на местных ресурсах)!"
    )
    bot.send_message(message.chat.id, donate_text)
@bot.message_handler(commands=['test'])
def test_handler(message):
    user_id = message.chat.id
    test_states[user_id] = {
        "current": 0,
        "score": 0,
        "questions": test_questions
    }
    bot.send_message(user_id, "Начинаем тест! За каждый правильный ответ +1 балл, за неправильный – -1 балл.")
    send_test_question(user_id, user_id)
@bot.callback_query_handler(func=lambda call: call.data.startswith("test_"))
def test_callback(call):
    user_id = call.message.chat.id
    state = test_states[user_id]
    _, q_index, result = call.data.split("_")
    q_index = int(q_index)
    current_q = state["questions"][q_index]
    if result == "correct":
        state["score"] += 1
        response_text = f"Правильно! {current_q['explanation']}"
    else:
        state["score"] -= 1
        response_text = f"Неправильно. {current_q['explanation']}"
    bot.answer_callback_query(call.id)
    bot.send_message(user_id, response_text)
    state["current"] += 1
    if state["current"] < len(state["questions"]):
        send_test_question(user_id, user_id)
    else:
        bot.send_message(user_id, f"Тест завершён! Ваш итоговый счет: {state['score']}")
        del test_states[user_id]
@bot.message_handler(func=lambda message: True)
def catch_all(message):
    bot.send_message(message.chat.id, "Извините, я не понимаю эту команду. Введите /start, чтобы увидеть список доступных команд.")

print("Бот запущен...")
bot.infinity_polling(none_stop=True)
